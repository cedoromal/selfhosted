services:
  traefik:
    image: traefik:${TRAEFIK_TAG:-latest}
    container_name: traefik
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.cfdnschallenge.acme.dnschallenge=true"
      - "--certificatesresolvers.cfdnschallenge.acme.dnschallenge.provider=cloudflare"
      #- "--certificatesresolvers.cfdnschallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.cfdnschallenge.acme.email=${CF_DNS_CHALLENGE_ACME_EMAIL:?}"
      - "--certificatesresolvers.cfdnschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - 80:80
      - 443:443
      #- 8080:8080
    volumes:
      - traefik_letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN:?}
      - CF_ZONE_API_TOKEN=${CF_ZONE_API_TOKEN:?}
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.${BASE_DOMAIN:?}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls.certresolver=cfdnschallenge
      - homepage.group=Networking
      - homepage.name=Traefik
      - homepage.icon=traefik
      - homepage.href=https://traefik.${BASE_DOMAIN:?}/
      - "homepage.description=a modern HTTP reverse proxy and load balancer that makes deploying microservices easy"

  docker-socket-proxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:${DOCKER_SOCKET_PROXY_TAG:-latest}
    container_name: docker-socket-proxy
    restart: unless-stopped
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    expose:
      - 2375
    #ports:
    #  - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only

  homepage:
    image: ghcr.io/gethomepage/homepage:${HOMEPAGE_TAG:-latest}
    container_name: homepage
    restart: unless-stopped
    expose:
      - 3000
    #ports:
    #  - 3000:3000
    volumes:
      - ./.homepage:/app/config # Make sure your local config directory exists
    #  - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
    environment:
      - HOMEPAGE_ALLOWED_HOSTS=home.${BASE_DOMAIN:?}
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=Host(`home.${BASE_DOMAIN:?}`)
      - traefik.http.routers.homepage.entrypoints=websecure
      - traefik.http.routers.homepage.tls.certresolver=cfdnschallenge
      - homepage.group=Miscellaneous
      - homepage.name=Homepage
      - homepage.icon=homepage
      - "homepage.description=you're looking at it right now"

  redbot:
    image: phasecorex/red-discordbot:${REDBOT_TAG:-latest}
    container_name: redbot
    restart: unless-stopped
    volumes:
      - redbot_data:/data
    environment:
      - TOKEN=${REDBOT_DISCORD_TOKEN:?}
      - PREFIX=${REDBOT_PREFIX:?}
      - TZ=${REDBOT_TIMEZONE:-Etc/UTC}
      - PUID=${REDBOT_PUID:-1000}
    labels:
      - homepage.group=Bots
      - homepage.name=Red
      - homepage.icon=discord
      - homepage.href=https://docs.discord.red/en/stable/
      - "homepage.description=a fully modular Discord bot"

  httpd-files:
    image: httpd:latest
    container_name: httpd-files
    restart: unless-stopped
    volumes:
      - ./.httpd-files/files:/usr/local/apache2/htdocs:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.httpd-files.rule=Host(`files.${BASE_DOMAIN:?}`)
      - traefik.http.routers.httpd-files.entrypoints=websecure
      - traefik.http.routers.httpd-files.tls.certresolver=cfdnschallenge
      - homepage.group=Miscellaneous
      - homepage.name=Files
      - homepage.icon=apache
      - homepage.href=https://files.${BASE_DOMAIN:?}/
      - "homepage.description=an Apache HTTP server that serves files"

  drasl:
    image: unmojang/drasl:latest
    container_name: drasl
    restart: unless-stopped
    expose:
      - 25585
    volumes:
      - ./.drasl/config:/etc/drasl
      - drasl_data:/var/lib/drasl
    labels:
    - traefik.enable=true
    - traefik.http.routers.drasl.rule=Host(`drasl.${BASE_DOMAIN:?}`)
    - traefik.http.routers.drasl.entrypoints=websecure
    - traefik.http.routers.drasl.tls.certresolver=cfdnschallenge
    - homepage.group=Auth
    - homepage.name=Drasl
    - homepage.icon=https://raw.githubusercontent.com/unmojang/drasl/master/doc/icon.png
    - homepage.href=https://drasl.${BASE_DOMAIN:?}/
    - "homepage.description=an alternative API server for Minecraft that handles authentication, skins, and capes"

volumes:
  traefik_letsencrypt:
  redbot_data:
  drasl_data:
